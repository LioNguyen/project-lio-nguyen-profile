# Multi-stage Docker build for React/Vite application
# Fallback version that uses npm if Bun is not available

# Stage 1: Build stage
FROM node:20-alpine AS builder

# Set working directory
WORKDIR /app

# Copy package files
COPY package.json package-lock.json* bun.lockb* ./

# Try to install bun, fallback to npm if it fails
RUN apk add --no-cache curl unzip || true && \
    (curl -fsSL https://bun.sh/install | bash && \
     ln -s /root/.bun/bin/bun /usr/local/bin/bun && \
     bun install --frozen-lockfile) || \
    (echo "Bun installation failed, falling back to npm" && \
     npm ci --only=production --no-audit --no-fund)

# Copy source code
COPY . .

# Build the application (try bun first, fallback to npm)
RUN (bun run build 2>/dev/null) || npm run build

# Stage 2: Production stage using Vite preview
FROM node:20-alpine AS production

WORKDIR /app

# Copy package files
COPY package.json package-lock.json* bun.lockb* ./

# Try to install bun, fallback to npm if it fails
RUN apk add --no-cache curl unzip || true && \
    (curl -fsSL https://bun.sh/install | bash && \
     ln -s /root/.bun/bin/bun /usr/local/bin/bun && \
     bun install --production --frozen-lockfile && \
     bun add vite) || \
    (echo "Bun installation failed, falling back to npm" && \
     npm ci --only=production --no-audit --no-fund && \
     npm install vite)

# Copy built application and necessary config files
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/vite.config.ts ./
COPY --from=builder /app/tsconfig.json ./
COPY --from=builder /app/tsconfig.node.json ./

# Create a non-root user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nextjs -u 1001

# Change ownership of the app directory
RUN chown -R nextjs:nodejs /app
USER nextjs

# Expose port 5173
EXPOSE 5173

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:5173 || exit 1

# Start the application (try bun first, fallback to npx)
CMD [(which bun >/dev/null 2>&1 && bun run preview -- --host 0.0.0.0 --port 5173) || npx vite preview --host 0.0.0.0 --port 5173]
